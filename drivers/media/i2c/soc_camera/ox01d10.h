/*
 * OmniVision OX01D10 sensor camera wizard 1336x1036@30/RGGB/MIPI
 *
 * Copyright (C) 2019 Cogent Embedded, Inc.
 *
 * This program is free software; you can redistribute  it and/or modify it
 * under  the terms of  the GNU General  Public License as published by the
 * Free Software Foundation;  either version 2 of the  License, or (at your
 * option) any later version.
 */

//#define OX01D10_DISPLAY_PATTERN_COLOR_BAR

#define OX01D10_MAX_WIDTH	1280
#define OX01D10_MAX_HEIGHT	960

#define OX01D10_SENSOR_WIDTH	1336
#define OX01D10_SENSOR_HEIGHT	1036

#define OX01D10_X_START		((OX01D10_SENSOR_WIDTH - OX01D10_MAX_WIDTH) / 2)
#define OX01D10_Y_START		((OX01D10_SENSOR_HEIGHT - OX01D10_MAX_HEIGHT) / 2)
#define OX01D10_X_END		(OX01D10_X_START + OX01D10_MAX_WIDTH - 1)
#define OX01D10_Y_END		(OX01D10_Y_START + OX01D10_MAX_HEIGHT - 1)

#define OX01D10_DELAY		0xffff

struct ox01d10_reg {
	u16	reg;
	u8	val;
};

/* wizard: MIPI 1280x960 HDR3_COMB RAW 30fps A02 */
static const struct ox01d10_reg ox01d10_regs_wizard_r1b_hdr3[] = {
{0x107, 0x01}, // s/w reset
{OX01D10_DELAY, 100}, // Wait 10ms
{0x3002, 0x00},
{0x3009, 0x26},
{0x3012, 0x21}, // MIPI, 2 lanes
{0x3016, 0xd0},
{0x3018, 0x50},
{0x301a, 0xb0},
{0x301e, 0x30},
{0x301f, 0x61},
{0x3020, 0x01},
{0x3022, 0x88},
{0x3023, 0x80},
{0x3024, 0x80},
{0x3028, 0x10},
{0x3600, 0x02},
{0x3602, 0x42},
{0x3603, 0x13},
{0x3604, 0xb3},
{0x3605, 0xff},
{0x3606, 0x90},
{0x3607, 0x59},
{0x360d, 0x88},
{0x3611, 0x49},
{0x3612, 0x49},
{0x3613, 0xbe},
{0x3614, 0xa9},
{0x3615, 0x89},
{0x3619, 0x00},
{0x3620, 0x60},
{0x362a, 0x18},
{0x362b, 0x18},
{0x362c, 0x18},
{0x362d, 0x18},
{0x3643, 0x12},
{0x3644, 0x00},
{0x3645, 0x17},
{0x3646, 0x1c},
{0x3647, 0x12},
{0x3648, 0x00},
{0x3649, 0x17},
{0x364a, 0x1c},
{0x364c, 0x18},
{0x364d, 0x18},
{0x364e, 0x18},
{0x364f, 0x18},
{0x3652, 0xca},
{0x3660, 0x43},
{0x3661, 0x31},
{0x3662, 0x00},
{0x3663, 0x00},
{0x3665, 0x13},
{0x3668, 0x80},
{0x366f, 0x00},
{0x3671, 0xe7},
{0x3674, 0x80},
{0x3678, 0x00},
{0x303, 0x02},
{0x305, 0x50},
{0x306, 0x03},
{0x307, 0x00},
{0x308, 0x07},
{0x30a, 0x01},
{0x316, 0x00},
{0x317, 0x41},
{0x323, 0x04},
{0x325, 0x50},
{0x326, 0x00},
{0x327, 0x03},
{0x328, 0x07},
{0x329, 0x00},
{0x32a, 0x00},
{0x32b, 0x00},
{0x32c, 0x02},
{0x3106, 0x10},
{0x3d8a, 0x03},
{0x3d8b, 0xff},
{0x4580, 0xf8},
{0x4581, 0xc7},
{0x458f, 0x00},
{0x4590, 0x20},
{0x4d0a, 0x68},
{0x4d0b, 0x78},
{0x4d0c, 0xa6},
{0x4d0d, 0x0c},
{0x4f00, 0xfa},
{0x4f01, 0x3f},
{0x3501, 0x00},
{0x3502, 0x18},
{0x3504, 0x28},
{0x3508, 0x01},
{0x3509, 0x00},
{0x350a, 0x01},
{0x350b, 0x00},
{0x350c, 0x00},
{0x3541, 0x00},
{0x3542, 0x14},
{0x3544, 0x28},
{0x3548, 0x01},
{0x3549, 0x00},
{0x354a, 0x01},
{0x354b, 0x00},
{0x354c, 0x00},
{0x3581, 0x00},
{0x3582, 0x10},
{0x3584, 0x28},
{0x3586, 0x01},
{0x3587, 0x69},
{0x3588, 0x01},
{0x3589, 0x00},
{0x358a, 0x01},
{0x358b, 0x00},
{0x358c, 0x00},
{0x358d, 0x0c},
{0x3700, 0x16},
{0x3701, 0x2c},
{0x3703, 0x19},
{0x3705, 0x00},
{0x3706, 0x35},
{0x3707, 0x16},
{0x3709, 0x29},
{0x370a, 0x00},
{0x370b, 0x85},
{0x370d, 0x08},
{0x3717, 0x03},
{0x3718, 0x08},
{0x371a, 0x04},
{0x371b, 0x14},
{0x371d, 0x00},
{0x3720, 0x03},
{0x372c, 0x10},
{0x372d, 0x04},
{0x3738, 0x4f},
{0x3739, 0x4f},
{0x373a, 0x2b},
{0x373b, 0x24},
{0x373f, 0x49},
{0x3740, 0x49},
{0x3741, 0x25},
{0x3742, 0x20},
{0x3747, 0x16},
{0x3748, 0x16},
{0x374b, 0x03},
{0x374c, 0x14},
{0x3752, 0x03},
{0x3756, 0x10},
{0x3757, 0x2e},
{0x3758, 0x00},
{0x3759, 0x35},
{0x375a, 0x00},
{0x375b, 0x85},
{0x375e, 0x12},
{0x3760, 0x09},
{0x376c, 0x01},
{0x376d, 0x08},
{0x376e, 0x08},
{0x376f, 0x08},
{0x3771, 0x08},
{0x3773, 0x00},
{0x3777, 0x00},
{0x3779, 0x02},
{0x377a, 0x00},
{0x377b, 0x00},
{0x377c, 0xc8},
{0x3785, 0x08},
{0x3790, 0x10},
{0x3797, 0x00},
{0x3798, 0x00},
{0x3799, 0x00},
{0x379c, 0x01},
{0x379d, 0x00},
{0x37a2, 0x02},
{0x37a3, 0x02},
{0x37a4, 0x02},
{0x37a5, 0x09},
{0x37a6, 0x09},
{0x37a7, 0x09},
{0x37a8, 0x03},
{0x37a9, 0x03},
{0x37ab, 0x03},
{0x37ad, 0x05},
{0x37ae, 0x05},
{0x37b0, 0x05},
{0x37b2, 0x04},
{0x37b3, 0x04},
{0x37b4, 0x04},
{0x37b5, 0x03},
{0x37b6, 0x03},
{0x37b7, 0x03},
{0x37bd, 0x01},
{0x37be, 0x36},
{0x37c0, 0xd0},
{0x37c4, 0x57},
{0x37c5, 0x57},
{0x37c6, 0x33},
{0x37c7, 0x29},
{0x37ce, 0x01},
{0x37d0, 0x00},
{0x37d1, 0x35},
{0x37d2, 0x00},
{0x37d3, 0x85},
{0x37d4, 0x00},
{0x37d5, 0x35},
{0x37d6, 0x00},
{0x37d7, 0x85},
{0x37d8, 0x01},
{0x37da, 0x02},
{0x37db, 0x00},
{0x37dc, 0x4c},
{0x3c00, 0x04},
{0x3c0b, 0x26},
{0x3c12, 0x88},
{0x3c1f, 0x12},
{0x3c20, 0x04},
{0x3c24, 0x0f},
{0x3c25, 0x14},
{0x3c26, 0x07},
{0x3c27, 0x10},
{0x3c28, 0x06},
{0x3c29, 0x0b},
{0x3c2b, 0x09},
{0x3c2c, 0x0e},
{0x3c2d, 0x07},
{0x3c2e, 0x0a},
{0x3c2f, 0x05},
{0x3c30, 0x0c},
{0x3c31, 0x08},
{0x3c32, 0x0f},
{0x3c33, 0x0a},
{0x3c34, 0x0d},
{0x3c3c, 0x00},
{0x3c3d, 0x0b},
{0x3c53, 0xe8},
{0x3c55, 0x28},
{0x3c5b, 0x20},
{0x3ce0, 0x02},
{0x3ce1, 0x3a},
{0x3ce2, 0x00},
{0x3ce3, 0x03},
/* window start */
{0x3800, 0x00},
{0x3801, 0x14},
{0x3802, 0x00},
{0x3803, 0x22},
{0x3804, 0x05},
{0x3805, 0x23},
{0x3806, 0x03},
{0x3807, 0xf1},
{0x3808, OX01D10_MAX_WIDTH >> 8}, //0x508=1288
{0x3809, OX01D10_MAX_WIDTH & 0xff},
{0x380a, OX01D10_MAX_HEIGHT >> 8}, //0x3c8=968
{0x380b, OX01D10_MAX_HEIGHT & 0xff},
{0x380c, 0x06},
{0x380d, 0xa0},
{0x380e, 0x03}, // VTS=0x3f2
{0x380f, 0xf2}, // VTS
{0x3810, 0x00},
{0x3811, 0x04},
{0x3812, 0x00},
{0x3813, 0x04},
/* window end */
{0x381c, 0x08},
{0x3820, 0x44}, /* VPLIP on */
{0x3821, 0x00}, /* HFLIP off */
{0x3832, 0x00},
{0x3834, 0x00},
{0x383c, 0x48},
{0x383d, 0x20},
{0x384c, 0x03},
{0x384d, 0x88},
{0x3850, 0x00},
{0x3851, 0x42},
{0x3852, 0x00},
{0x3853, 0x40},
{0x3856, 0x04},
{0x3857, 0x6b},
{0x3858, 0x04},
{0x385b, 0x04},
{0x385c, 0x6a},
{0x3861, 0x00},
{0x3862, 0x40},
{0x388c, 0x03},
{0x388d, 0x5c},
{0x4502, 0x00},
{0x4504, 0x01},
{0x4507, 0x10},
{0x450b, 0x14},
{0x450c, 0x04},
{0x3b84, 0x45},
{0x3b85, 0x00},
{0x3409, 0x02},
{0x3304, 0x04},
{0x3306, 0x03},
{0x3307, 0x00},
{0x3308, 0x00},
{0x3309, 0x00},
{0x330a, 0x00},
{0x330b, 0x00},
{0x330c, 0x00},
{0x330d, 0x00},
{0x330e, 0x00},
{0x330f, 0x00},
{0x3310, 0x06},
{0x3311, 0x05},
{0x3312, 0x55},
{0x3313, 0x02},
{0x3314, 0xaa},
{0x3315, 0x07},
{0x3316, 0xf0},
{0x3317, 0x00},
{0x4001, 0x2b},
{0x4004, 0x00},
{0x4005, 0x40},
{0x4008, 0x02},
{0x4009, 0x09},
{0x400a, 0x02},
{0x400b, 0x00},
{0x4020, 0x00},
{0x4021, 0x00},
{0x4022, 0x00},
{0x4023, 0x00},
{0x402e, 0x00},
{0x402f, 0x40},
{0x4030, 0x00},
{0x4031, 0x40},
{0x405c, 0x20},
{0x5000, 0x3d},
{0x5001, 0x05},
{0x5030, 0x00},
{0x5038, 0x10},
{0x5039, 0x04},
{0x503a, 0x04},
#ifdef OX01D10_DISPLAY_PATTERN_COLOR_BAR
{0x5080, 0xc0}, /* Rolling test pattern for HCG */
{0x5083, 0x0f},
{0x50c0, 0xc0}, /* Rolling test pattern for LCG */
{0x50c3, 0x0f},
{0x5100, 0xc0}, /* Rolling test pattern for VS */
#else
{0x5080, 0x00},
{0x5083, 0x0f},
{0x50c0, 0x00},
{0x50c3, 0x0f},
{0x5100, 0x00},
#endif
{0x5103, 0x0f},
{0x5140, 0x10},
{0x5142, 0x10},
{0x5144, 0x10},
{0x5146, 0x10},
{0x5147, 0x08},
{0x5148, 0x08},
{0x5149, 0x08},
{0x514a, 0x08},
{0x514b, 0x10},
{0x514c, 0x10},
{0x514d, 0x08},
{0x514e, 0x00},
{0x5150, 0x08},
{0x5154, 0x00},
{0x5157, 0x10},
{0x5159, 0x08},
{0x515b, 0x08},
{0x515d, 0x10},
{0x5160, 0x10},
{0x5162, 0x10},
{0x5163, 0x10},
{0x5164, 0xaa},
{0x5165, 0xaa},
{0x5166, 0xaa},
{0x5167, 0xaa},
{0x5169, 0xaa},
{0x516c, 0x99},
{0x516d, 0xaa},
{0x516e, 0xaa},
{0x5174, 0x99},
{0x5176, 0x99},
{0x5179, 0xaa},
{0x517a, 0xaa},
{0x517d, 0x88},
{0x517e, 0x40},
{0x517f, 0x20},
{0x5182, 0x00},
{0x5183, 0xee},
{0x5184, 0x01},
{0x5185, 0x3d},
{0x5186, 0x01},
{0x5188, 0x00},
{0x5189, 0xd3},
{0x5220, 0x4b},
{0x5240, 0x4b},
{0x5260, 0x4b},
{0x5280, 0x00},
{0x5281, 0x5e},
{0x5282, 0x01},
{0x5283, 0xfd},
{0x5285, 0x01},
{0x5422, 0x10},
{0x54a2, 0x10},
{0x5522, 0x10},
{0x559e, 0x03},
{0x559f, 0x00},
{0x55a0, 0x40},
{0x6008, 0xcf},
{0x6009, 0x00},
{0x4903, 0x80},
{0x4601, 0x30},
{0x4602, 0x02},
{0x4603, 0x01},
{0x4605, 0x03},
{0x460a, 0x36},
{0x460c, 0x60},
{0x4800, 0x04},
{0x480e, 0x04},
{0x4813, 0x12}, // VC
{0x481b, 0x50},
{0x481f, 0x30},
{0x482b, 0x04},
{0x482e, 0x34},
{0x4837, 0x10},
{0x484b, 0x27},
{0x4880, 0x00},
{0x4881, 0x00},
{0x4885, 0x03},
{0x4886, 0x00},
{0x4708, 0x00},
{0x470b, 0x0f},
{0x380e, 0x04}, // VTS=0x400
{0x380f, 0x00}, //
/* patch start */
//{0x3208, 0x03}, // start recording group3
{0x3501, 0x02}, // HCG exposure integration time MSB
{0x3502, 0x00}, // HCG exposure integration time LSB
{0x3541, 0x00}, // LCG exposure integration time MSB
{0x3542, 0x40}, // LCG exposure integration time LSB
{0x3581, 0x00}, // VS exposure integration time MSB
{0x3582, 0x08}, // VS exposure integration time LSB
{0x3508, 0x02}, // HCG real gain MSB
{0x3509, 0x00}, // HCG real gain LSB
{0x350a, 0x02}, // HCG digital gain MSB
{0x350b, 0x00}, // HCG digital gain LSB
{0x3548, 0x00}, // LCG real gain MSB
{0x3549, 0x40}, // LCG real gain LSB
{0x354a, 0x00}, // LCG digital gain MSB
{0x354b, 0x40}, // LCG digital gain LSB
{0x3588, 0x00}, // VS real gain MSB
{0x3589, 0x08}, // VS real gain LSB
{0x358a, 0x00}, // VS digital gain
{0x358b, 0x08}, // VS digital gain
//{0x3208, 0x13}, // stop recording group3
//{0x3208, 0xe3}, // launch group3
/* patch2 end */
{0x100, 0x01},
};
